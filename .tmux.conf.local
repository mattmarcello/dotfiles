unbind C-a
set -g prefix C-s

#source tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# show more stuff on left side of status bar

set-option -g status-left-length 50

# show battery and date in statue bar
set-option -g status-right " #(battery -t)  #(date '+%a, %b %d - %I:%M') "

# bindings for splitting windows
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 3
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# open new window in current path
bind c new-window -c "#{pane_current_path}"

# break pane into new window
bind-key b break-pane -d

# choose tmux session
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# edit todo list
bind-key t split-window -h "vim ~/todo.md"

# clear screen
bind C-l send-keys 'C-l'

# breakout pane into session
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'



